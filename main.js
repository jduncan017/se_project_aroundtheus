!function(){"use strict";var e="";const t={formSelector:".popup__form",inputSelector:".popup__form-input",submitButtonSelector:".popup__submit-button",inactiveButtonClass:"popup__submit-button_disabled",inputErrorClass:"popup__input-invalid",errorClass:"popup__error_visible"};class s{static cardImageLinks=[];constructor(e,t,s,r,i,n,o,a){let{name:c,link:l,owner:u,_id:d,likes:h}=e;this._text=c,this._imageLink=l,this._ownerId=u._id,this._cardId=d,this._cardLikesArray=h,this._userId=t,this._newCard=s.cloneNode(!0),this._cardImage=this._newCard.querySelector(".card__image"),this._cardTitle=this._newCard.querySelector(".card__title"),this._cardLikesCounter=this._newCard.querySelector(".card__likes-counter"),this._placeholderImage=r,this._handleCardClick=i,this._handleTrashClick=n,this._cardLikeBtn=this._newCard.querySelector(".card__like-button"),this._cardTrashBtn=this._newCard.querySelector(".card__trash-button"),this._cardSelector=this._cardTrashBtn.parentElement,this._duplicateCardsArray=o,this._handleLikeClick=a}getId(){return this._cardId}setLikes(e){this._cardLikesArray=e,this._renderLikes()}isLiked(){return this._cardLikesArray.some((e=>e._id===this._userId))}createCard(){return this._cardImage.src=this._imageLink,this._cardImage.onerror=()=>{this._cardImage.src=this._placeholderImage},this._cardImage.alt=this._text,this._cardTitle.textContent=this._text,this._newCard.id=this._cardId,this._checkForDuplicates(),this._setInitialState(),this._newCard}removeFromImageLinks(){const e=s.cardImageLinks.indexOf(this._imageLink);e>-1&&s.cardImageLinks.splice(e,1)}_addListeners(){this._cardLikeBtn.addEventListener("click",(()=>{this._cardLikeBtn.classList.toggle("card__like-button_active"),this._handleLikeClick(this)})),this._cardTrashBtn.addEventListener("click",(()=>this._handleTrashClick(this))),this._cardImage.addEventListener("click",(()=>{this._handleCardClick(this._cardImage.src,this._text)}))}_checkForDuplicates(){const e=document.querySelector("#show-duplicates-checkbox");s.cardImageLinks.includes(this._imageLink)?(e.checked||this._newCard.classList.add("card_invisible"),this._duplicateCardsArray.push(this._newCard.id)):s.cardImageLinks.push(this._imageLink)}_setInitialState(){this._addListeners(),this._ownerId!==this._userId&&this._cardTrashBtn.remove(),this._renderLikes()}_renderLikes(){this._cardLikesCounter.textContent=this._cardLikesArray.length,this.isLiked()?this._cardLikeBtn.classList.add("card__like-button_active"):this._cardLikeBtn.classList.remove("card__like-button_active")}}class r{constructor(e,t){this.settings=e,this.formElement=t,this.button=t.querySelector(this.settings.submitButtonSelector),this.inputElements=Array.from(t.querySelectorAll(this.settings.inputSelector))}_setEventListeners(){this._toggleButtonState(),this.inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._toggleInputErrorDisplay(this.formElement,e),this._toggleButtonState(this.inputElements)}))}))}_checkInputValidity(e){return e.validity.valid}_checkFormValidity(e){return e.every((e=>this._checkInputValidity(e)))}_hideError(e,t){t.classList.remove(this.settings.errorClass),e.classList.remove(this.settings.inputErrorClass)}_showError(e,t){t.classList.add(this.settings.errorClass),e.classList.add(this.settings.inputErrorClass)}_toggleInputErrorDisplay(e,t){const s=e.querySelector(`#${t.id}-error`);s.textContent=t.validationMessage,this._checkInputValidity(t)?this._hideError(t,s):this._showError(t,s)}_enableButton(e){e.classList.remove(this.settings.inactiveButtonClass),e.disabled=!1}_disableButton(e){e.classList.add(this.settings.inactiveButtonClass),e.disabled=!0}_toggleButtonState(){this._checkFormValidity(this.inputElements)?this._enableButton(this.button):this._disableButton(this.button)}resetValidation(){this._toggleButtonState(),this.inputElements.forEach((e=>{const t=this.formElement.querySelector(`#${e.id}-error`);this._hideError(e,t)}))}enableValidation(){this._setEventListeners()}}class i{constructor(e,t){let{items:s,renderer:r}=e;this.items=s,this.renderer=r,this.container=document.querySelector(t)}renderItems(){this.items.forEach((e=>{this.appendItem(this.renderer(e))}))}appendItem(e){this.container.append(e)}prependItem(e){this.container.prepend(e)}}class n{constructor(e){this.popup=document.querySelector(e),this.closeButton=this.popup.querySelector(".popup__close-button"),this._handleEscClose=this._handleEscClose.bind(this)}open(){this.popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this.popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this.closeButton.addEventListener("click",(e=>{e.stopPropagation(),this.close()})),this.popup.addEventListener("mousedown",(e=>{e.target===e.currentTarget&&this.close()}))}_handleEscClose(e){"Escape"===e.key&&this.close()}}class o extends n{constructor(e,t){super(e),this._popupForm=this.popup.querySelector(".popup__form"),this._handleFormSubmit=t,this._inputList=Array.from(this._popupForm.querySelectorAll("input"))}_getInputValues(){const e=Array.from(this._popupForm.elements),t={};return e.forEach((e=>{t[e.name]=e.value})),t}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.stopPropagation(),e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}close(){super.close(),this._popupForm.reset()}}var a=e+"4d1dba3d8f0a3d9f693e.png";const c={};let l=null,u=null;function d(e,t){e.textContent=t}const h=document.querySelector("#cards").content.firstElementChild;function p(e){return new s(e,u,h,a,A,f,E,x).createCard()}Array.from(document.querySelectorAll(t.formSelector)).forEach((e=>{const s=new r(t,e),i=e.getAttribute("name");c[i]=s,s.enableValidation()}));const _=new class{constructor(e){let{userNameSelector:t,userAboutSelector:s,userPictureSelector:r}=e;this.userNameElement=document.querySelector(t),this.userAboutElement=document.querySelector(s),this.userPictureElement=document.querySelector(r)}getUserInfo(){return{name:this.userNameElement.textContent,about:this.userAboutElement.textContent}}setUserInfo(e){let{name:t,about:s}=e;this.userNameElement.textContent=t,this.userAboutElement.textContent=s}setUserPicture(e){let{avatar:t}=e;this.userPictureElement.src=t}}({userNameSelector:".profile__name-title",userAboutSelector:".profile__about",userPictureSelector:".profile__picture"}),m=new class{constructor(e){this._url=e.url,this._headers=e.headers}getUserInfo(){return this._fetch("/users/me")}updateUserInfo(e){return this._fetch("/users/me","PATCH",e)}getInitialCards(){return this._fetch("/cards")}addCard(e){return this._fetch("/cards","POST",e)}deleteCard(e){return this._fetch(`/cards/${e}`,"DELETE")}likeCard(e){return this._fetch(`/cards/likes/${e}`,"PUT")}unlikeCard(e){return this._fetch(`/cards/likes/${e}`,"DELETE")}updateUserPicture(e){return this._fetch("/users/me/avatar","PATCH",e).then((e=>{document.querySelector(".profile__picture").src=e.avatar}))}_fetch(e){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;const s={method:arguments.length>1&&void 0!==arguments[1]?arguments[1]:"GET",headers:this._headers};return t&&(s.body=JSON.stringify(t)),fetch(`${this._url}${e}`,s).then(this._checkResponse).catch((e=>console.error(e)))}_checkResponse(e){return e.ok?e.json():Promise.reject(`Oops there's an error!: ${e.status}`)}}({url:"https://around.nomoreparties.co/v1/cohort-3-en",headers:{authorization:"c1d3050f-9f71-48b4-9235-936056aa4e95","Content-Type":"application/json"}});Promise.all([m.getUserInfo(),m.getInitialCards()]).then((e=>{let[t,s]=e;_.setUserPicture({avatar:t.avatar}),_.setUserInfo({name:t.name,about:t.about}),u=t._id,l=new i({items:s,renderer:p},".cards__list"),l.renderItems()})).catch((e=>{console.error(`Error: ${e}`)}));const g=document.querySelector("#confirm-delete-button");function f(e){k.open(),k.setAction((()=>(d(g,"Deleting..."),function(e){const t=document.getElementById(e).querySelector(".card__image");E=E.filter((t=>t!==e)),s.cardImageLinks=s.cardImageLinks.filter((e=>e!==t.src))}(e),m.deleteCard(e.getId()).then((()=>{document.getElementById(e.getId()).remove(),k.close()})).catch((e=>{console.error(`Error: ${e}`)})).finally((()=>{d(g,"Yes")})),g)))}const k=new class extends n{constructor(e){super(e),this._confirmButton=this.popup.querySelector(".confirm-popup__submit-button")}setAction(e){this._handleFormSubmit=e}setEventListeners(){super.setEventListeners(),this._confirmButton.addEventListener("click",(e=>{e.preventDefault(),this._handleFormSubmit()}))}}("#confirm-delete-popup");k.setEventListeners();let E=[];document.querySelector("#show-duplicates-checkbox").addEventListener("change",(e=>{E.forEach((t=>{const s=document.getElementById(t);e.target.checked?s.classList.remove("card_invisible"):s.classList.add("card_invisible")}))}));const L=document.querySelector("#picture-submit-button"),v=document.querySelector(".profile__picture-overlay"),y=new o("#edit-profile-picture-popup",(function(e){d(L,"Saving..."),m.updateUserPicture({avatar:e.link}).then((()=>{y.close()})).catch((e=>{console.error(`Error: ${e}`)})).finally((()=>{d(L,"Save")}))}));y.setEventListeners(),v.addEventListener("click",(function(){c["edit-profile-picture-form"].resetValidation(),y.open()}));const b=document.querySelector("#profile-submit-button"),S=document.querySelector(".profile__name-button"),I=new o("#edit-popup",(function(e){d(b,"Saving..."),m.updateUserInfo({name:e.name,about:e.about}).then((e=>{_.setUserInfo({name:e.name,about:e.about}),I.close()})).catch((e=>{console.error(`Error: ${e}`)})).finally((()=>{d(b,"Save")}))}));I.setEventListeners(),S.addEventListener("click",(function(){c["edit-profile-form"].resetValidation();const e=_.getUserInfo();I.setInputValues(e),I.open()}));const C=document.querySelector(".profile__add-button"),q=document.querySelector("#image-submit-button"),w=new o("#add-image-popup",(function(e){d(q,"Saving..."),m.addCard({name:e.name,link:e.link}).then((e=>{const t=p(e);l.prependItem(t),w.close()})).catch((e=>{console.error(e)})).finally((()=>{d(q,"Save")}))}));w.setEventListeners(),C.addEventListener("click",(()=>{c["add-image-form"].resetValidation(),w.open()}));const B=new class extends n{constructor(e){super(e),this.popupImage=this.popup.querySelector(".image-popup__image"),this.imagePopupTitle=this.popup.querySelector(".image-popup__title")}open(e,t){this.popupImage.src=e,this.popupImage.alt=t,this.imagePopupTitle.textContent=t,super.open()}}("#image-popup");function A(e,t){B.open(e,t)}function x(e){const t=e.isLiked()?"unlikeCard":"likeCard";m[t](e.getId()).then((t=>{e.setLikes(t.likes)})).catch((e=>{console.error(`Error: ${e}`)}))}B.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,